<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>字母塔防遊戲</title>
    <style>
        body {
            background: linear-gradient(135deg, #1E3C72, #2A5298); /* 深藍漸層 */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        #game-container {
            position: relative;
            width: 900px;
            height: 900px;
            background-color: #A3C0E0; /* 淺湖水藍 */
            overflow: hidden;
        }
        
        .monster {
            position: absolute;
            font-size: 50px;
            transition: transform 0.2s;
        }
        .fort {
            position: absolute;
            bottom: 50px;
            width: 80px;
            height: 100px;
            background-color: #4A90E2; /* 金黃色 */
            border: 4px solid #007AFF; /* 深綠色邊框 */
            box-shadow: 0px 0px 15px rgba(255, 191, 0, 0.8); /* 柔和的金黃色光暈 */
            clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-end;
            font-size: 30px;
            font-weight: bold;
            transition: transform 0.1s;
            padding-bottom: 10px;
        }
        .fort .letter {
            font-size: 35px;
            margin-bottom: 40px; /* 讓字母往上移 */
            margin-top: 0px;
            color: black; /* 改成黑色 */
        }
        .fort .animal {
            font-size: 30px;
            margin-bottom: 5px; /* 讓動物靠近底部 */
        }
        .destroyed {
            background-color: gray !important;
            animation: explode 0.5s ease-out;
        }
        .letter {
            position: absolute;
            font-size: 30px;
            color: yellow;
        }
        @keyframes explode {
            0% { transform: scale(1); }
            50% { transform: scale(1.5); opacity: 0.5; }
            100% { transform: scale(0); opacity: 0; }
        }
        #game-over {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 50px;
            color: #2A5F9E; /* 深藍色 */
            font-weight: bold;
            text-shadow: 3px 3px 10px rgba(42, 95, 158, 0.8);
            display: none;
            white-space: nowrap;
        }
        
#game-time {
    position: absolute;
    top: 55%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 30px;
    color: #4F84C4; /* 深藍色 */
    font-weight: bold;
    text-shadow: 2px 2px 6px rgba(79, 132, 196, 0.8);
    display: none;
}
        

@keyframes shake {
    0% { transform: translate(0, 0); }
    25% { transform: translate(-5px, 5px); }
    50% { transform: translate(5px, -5px); }
    75% { transform: translate(-5px, 5px); }
    100% { transform: translate(0, 0); }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes sway {
    0%, 100% { transform: translateX(0); }
    50% { transform: translateX(20px); }
}

.monster {
    animation: sway 1s ease-in-out infinite alternate;
}

.destroyed {
    animation: shake 0.5s ease-in-out, fadeOut 1s ease-in-out forwards;
}

#author {
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 16px;
    color: white;
    font-weight: bold;
    text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);
}
        
    </style>
</head>
<body>
    <div id="game-container">
        <div id="author">程式作者：阿邦老師 Ver.20250313</div>
        <div id="game-over">GAME OVER</div>
        <div id="game-time"></div>
    </div>
    <script>
        const gameContainer = document.getElementById('game-container');
        const gameOverText = document.getElementById('game-over');
        const monsters = ['👹', '👻', '💀'];
        const animalIcons = ['🐼', '🐨', '🐻'];
        const monsterElements = [];
        const forts = [];
        let activeForts = 3;
        let startTime = Date.now(); // 記錄遊戲開始時間

        function createMonster(index) {
            let monster = document.createElement('div');
            monster.classList.add('monster');
            monster.innerHTML = monsters[index];
            monster.style.left = `${300 * index + 150}px`;
            monster.style.top = '0px';

    // 設定不同的動畫速度
    let randomSpeed = (Math.random() * 0.5 + 0.8).toFixed(2); // 0.8s - 1.3s
    monster.style.animationDuration = `${randomSpeed}s`;
    
            gameContainer.appendChild(monster);
            monsterElements[index] = monster;
            animateMonster(monster, index);
        }

function animateMonster(monster, index) {
    let speed = Math.random() * 0.5 + 0.4; // 調整速度範圍
    function move() {
        let top = parseFloat(monster.style.top);
        let gameHeight = gameContainer.clientHeight;
        
        // 讓怪物持續移動到底部
        if (top < gameHeight) {
            monster.style.top = `${top + speed}px`;
            requestAnimationFrame(move);
        } else {
            // 怪物超出畫面後移除
            monster.remove();
        }
    }
    move();
}
        function createFort(index) {
            let fort = document.createElement('div');
            fort.classList.add('fort');
            fort.style.left = `${300 * index + 150}px`;

            // 字母
            let letter = document.createElement('div');
            letter.classList.add('letter');
            letter.innerText = randomLetter();

            // 動物角色
            let animal = document.createElement('div');
            animal.classList.add('animal');
            animal.innerText = animalIcons[index];

            fort.appendChild(letter);
            fort.appendChild(animal);
            gameContainer.appendChild(fort);
            forts[index] = fort;
        }

        function randomLetter() {
            return String.fromCharCode(65 + Math.floor(Math.random() * 26));
        }

        document.addEventListener('keydown', (event) => {
            forts.forEach((fort, index) => {
                let letterElement = fort.querySelector('.letter');
                if (letterElement.innerText === event.key.toUpperCase() && !fort.classList.contains('destroyed')) {
                    shootLetter(fort, index);
                }
            });
        });

        function shootLetter(fort, index) {
            let letter = document.createElement('div');
            letter.classList.add('letter');
            letter.innerText = fort.querySelector('.letter').innerText;
            let x = 300 * index + 180;
            let y = 800;
            letter.style.left = `${x}px`;
            letter.style.top = `${y}px`;
            gameContainer.appendChild(letter);
            fort.querySelector('.letter').innerText = randomLetter();
            fort.style.transform = 'scale(0.9)';
            setTimeout(() => fort.style.transform = 'scale(1)', 100);
            animateLetter(letter, index);
        }

        function animateLetter(letter, index) {
            function move() {
                let top = parseFloat(letter.style.top);
                if (top > 0) {
                    letter.style.top = `${top - 5}px`;
                    let monster = monsterElements[index];
                    if (monster && checkCollision(letter, monster)) {
                        monster.style.transform = 'scale(0.8)';
                        setTimeout(() => {
                            monster.style.transform = 'scale(1)';
                            monster.style.top = `${parseFloat(monster.style.top) - 30}px`;
                        }, 200);
                        letter.remove();
                        return;
                    }
                    requestAnimationFrame(move);
                } else {
                    letter.remove();
                }
            }
            move();
        }

        function checkCollision(letter, monster) {
            let letterRect = letter.getBoundingClientRect();
            let monsterRect = monster.getBoundingClientRect();
            return letterRect.bottom < monsterRect.bottom &&
                   letterRect.right > monsterRect.left &&
                   letterRect.left < monsterRect.right;
        }


function endGame() {
    let elapsedTime = ((Date.now() - startTime) / 1000).toFixed(1);  // 計算經過的時間
    gameOverText.style.display = 'block';
    
    let gameTimeText = document.getElementById('game-time');
    gameTimeText.innerText = `遊戲時間：${elapsedTime} 秒`;
    gameTimeText.style.display = 'block';
}



function checkFortCollision() {
    forts.forEach((fort, index) => {
        let monster = monsterElements[index];
        if (!monster || !fort || fort.classList.contains('destroyed')) return;

        let monsterRect = monster.getBoundingClientRect();
        let fortRect = fort.getBoundingClientRect();

        if (
            monsterRect.bottom >= fortRect.top &&
            monsterRect.top <= fortRect.bottom &&
            monsterRect.right >= fortRect.left &&
            monsterRect.left <= fortRect.right
        ) {
            fort.classList.add('destroyed');
            fort.style.animation = 'shake 0.5s ease-in-out';

            setTimeout(() => {
                fort.style.display = 'none';
                activeForts--;

                if (monster) {
                    monster.remove();
                    monsterElements[index] = null;
                }

                if (activeForts === 0) {
                    setTimeout(() => {
                        endGame(); // ⚠️ 這裡改為呼叫 endGame()
                    }, 1000);
                }
            }, 1000);
        }
    });
}


        setInterval(checkFortCollision, 100);

        for (let i = 0; i < 3; i++) {
            createFort(i);
            createMonster(i);
        }
    </script>
</body>
</html>
