<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>中文注音鍵盤遊戲</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f4f4f4;
            margin: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .keyboard {
            text-align: center;
            margin-top: 20px;
            display: none; /* 預設隱藏鍵盤 */
        }

        .row {
            display: flex;
            justify-content: center;
            margin-bottom: 5px;
        }

        .key {
            width: 80px;
            height: 80px;
            margin: 3px;
            background-color: #ddd;
            border: 1px solid #ccc;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 36px;
            cursor: pointer;
            user-select: none;
            transition: background-color 0.2s;
        }

        .key.active {
            background-color: green;
            animation: flash 0.3s infinite alternate;
        }


        /* Special styles for the F and J keys */
        .key[data-key="F"], .key[data-key="J"] {
            font-weight: bold;
            text-decoration: underline;
        }
        .key[data-key="1"] {
            background-color: #FFB5B5; /*  按鍵1 變色 */
        }
        .key[data-key="Q"] {
            background-color: #FFB5B5; 
        }
        .key[data-key="A"] {
            background-color: #FFB5B5; 
        }
        .key[data-key="Z"] {
            background-color: #FFB5B5; 
        }
        .key[data-key="2"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="W"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="S"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="X"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="3"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="E"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="D"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="C"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="8"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="I"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="K"] {
            background-color: #FFFFCE	; 
        }
        .key[data-key=","] {
            background-color: #FFFFCE	; 
        }
        .key[data-key="0"] {
            background-color: #FFB5B5; /*  按鍵1 變色 */
        }
        .key[data-key="P"] {
            background-color: #FFB5B5; 
        }
        .key[data-key=";"] {
            background-color: #FFB5B5; 
        }
        .key[data-key="/"] {
            background-color: #FFB5B5; 
        }
        .key[data-key="-"] {
            background-color: #FFB5B5	; 
        }
        .key[data-key="="] {
            background-color: #FFECEC	; 
        }
        .key[data-key="["] {
            background-color: #FFECEC	; 
        }
        .key[data-key="]"] {
            background-color: #FFECEC	; 
        }
        .key[data-key="L"] {
            background-color: #FFECEC	; 
        }
        .key[data-key="`"] {
            background-color: #FFECEC	; 
        }
        .key[data-key="9"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="O"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="L"] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="."] {
            background-color: #FFE4CA	; 
        }
        .key[data-key="7"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="U"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="J"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="M"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="6"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="Y"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="H"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="N"] {
            background-color: #BEBEBE	; 
        }
        .key[data-key="|"] {
            background-color: #FFECEC; /* backspace 按鍵變黃色 */
            width: 160px;
        }

        .key.error {
            background-color: red;/* 錯誤按鍵變紅色 */
        }


        #current-key {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        #score, #timer, #result {
            font-size: 20px;
            margin-top: 10px;
        }

        #stars {
            font-size: 24px;
            margin-top: 10px;
        }

        #restart-btn {
            display: none;
            margin-top: 15px;
            padding: 10px 20px;
            font-size: 18px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
        }

        #restart-btn:hover {
            background-color: #45a049;
        }

        @keyframes flash {
            0% {
                background-color: green;
            }
            100% {
                background-color: lightgreen;
            }
        }

        .mode-btn {
            margin: 10px;
            padding: 10px 20px;
            font-size: 18px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
        }

        .mode-btn:hover {
            background-color: #45a049;
        }

        #game-mode {
            font-size: 20px;
            margin-top: 10px;
        }

        /* 新增的 CSS，隱藏初始顯示的元素 */
        #current-key, #score, #timer {
            display: none;
        }
        #target-key {
          color: blue;
          }
    </style>
</head>
<body>

<h1>中文注音鍵盤遊戲</h1>
<p id="mode-warning" style="font-size: 18px; color: red; font-weight: bold;">
    必須選擇打字模式後，才能開始打字！
</p>
<div id="mode-buttons">
    <button class="mode-btn" id="mode60">60 秒挑戰模式</button>
    <button class="mode-btn" id="mode10">10 秒暖身</button>
    <button class="mode-btn" id="mode90">90 秒練習模式</button> <!-- 新增 90 秒模式 -->
</div>

<!-- 遊戲資訊，開始前隱藏 -->
<div id="current-key">請按下：<span id="target-key"></span></div>
<div id="score">得分：0</div>
<div id="timer">剩餘時間：60 秒</div>
<div id="result"></div>
<div id="stars"></div>
<div id="game-mode"></div> <!-- 顯示選擇的遊戲模式 -->

<div class="keyboard">
    <div class="row">
        <div class="key" data-key="1">ㄅ</div>
        <div class="key" data-key="2">ㄉ</div>
        <div class="key" data-key="3">ˇ</div>
        <div class="key" data-key="4">ˋ</div>
        <div class="key" data-key="5">ㄓ</div>
        <div class="key" data-key="6">ˊ</div>
        <div class="key" data-key="7">˙</div>
        <div class="key" data-key="8">ㄚ</div>
        <div class="key" data-key="9">ㄞ</div>
        <div class="key" data-key="0">ㄢ</div>
        <div class="key" data-key="-">ㄦ</div>
        <div class="key" data-key="=">=</div>
        <div class="key" data-key="|">←</div>
    </div>

    <div class="row">
        <div class="key" data-key="Q">ㄆ</div>
        <div class="key" data-key="W">ㄊ</div>
        <div class="key" data-key="E">ㄍ</div>
        <div class="key" data-key="R">ㄐ</div>
        <div class="key" data-key="T">ㄔ</div>
        <div class="key" data-key="Y">ㄗ</div>
        <div class="key" data-key="U">ㄧ</div>
        <div class="key" data-key="I">ㄛ</div>
        <div class="key" data-key="O">ㄟ</div>
        <div class="key" data-key="P">ㄣ</div>
        <div class="key" data-key="[">[</div>
        <div class="key" data-key="]">]</div>
        <div class="key" data-key="`">\</div>
    </div>

    <div class="row">
        <div class="key" data-key="A">ㄇ</div>
        <div class="key" data-key="S">ㄋ</div>
        <div class="key" data-key="D">ㄎ</div>
        <div class="key" data-key="F">ㄑ</div>
        <div class="key" data-key="G">ㄕ</div>
        <div class="key" data-key="H">ㄘ</div>
        <div class="key" data-key="J">ㄨ</div>
        <div class="key" data-key="K">ㄜ</div>
        <div class="key" data-key="L">ㄠ</div>
        <div class="key" data-key=";">ㄤ</div>
        <div class="key" data-key="`">"</div>
        <div class="key" data-key="`">↵</div>        
    </div>

    <div class="row">
        <div class="key" data-key="Z">ㄈ</div>
        <div class="key" data-key="X">ㄌ</div>
        <div class="key" data-key="C">ㄏ</div>
        <div class="key" data-key="V">ㄒ</div>
        <div class="key" data-key="B">ㄖ</div>
        <div class="key" data-key="N">ㄙ</div>
        <div class="key" data-key="M">ㄩ</div>
        <div class="key" data-key=",">ㄝ</div>
        <div class="key" data-key=".">ㄡ</div>
        <div class="key" data-key="/">ㄥ</div>                        
        <div class="key" data-key="`">⇧</div>
    </div>
</div>
<button id="restart-btn" onclick="restartGame()">重新選擇</button>

<script>
        const keyMap = {
            "1": "ㄅ", "2": "ㄉ", "3": "ˇ", "4": "ˋ", "5": "ㄓ", "6": "ˊ", "7": "˙", "8": "ㄚ", "9": "ㄞ", "0": "ㄢ",
            "-": "ㄦ", "=": "=",
            "Q": "ㄆ", "W": "ㄊ", "E": "ㄍ", "R": "ㄐ", "T": "ㄔ", "Y": "ㄗ", "U": "ㄧ", "I": "ㄛ", "O": "ㄟ", "P": "ㄣ",
            "[": "[", "]": "]",
            "A": "ㄇ", "S": "ㄋ", "D": "ㄎ", "F": "ㄑ", "G": "ㄕ", "H": "ㄘ", "J": "ㄨ", "K": "ㄜ", "L": "ㄠ", ";": "ㄤ", "'": "'",
            "Z": "ㄈ", "X": "ㄌ", "C": "ㄏ", "V": "ㄒ", "B": "ㄖ", "N": "ㄙ", "M": "ㄩ", ",": "ㄝ", ".": "ㄡ", "/": "ㄥ"
        };
    let score = 0;
    let keyPressCount = 0;
    let timeLeft = 60;
    let timerStarted = false;
    let timerInterval;
    let currentKey;
    let gameMode = 60;
    let previousKeys = [];  // 用來記錄前五次的題目
    let selectedMode = "";  // 用來儲存選擇的模式名稱
    let gameEnded = false;  // 新增變數以判斷遊戲是否結束

    // 通用的初始化函數
    function resetGameVariables() {
        score = 0;
        keyPressCount = 0;
        timeLeft = gameMode;
        previousKeys = [];  // 重置前五次的題目記錄
        timerStarted = false;
        gameEnded = false;  // 重置遊戲結束狀態

        // 更新顯示
        document.getElementById('score').textContent = `得分：${score}`;
        document.getElementById('timer').textContent = `剩餘時間：${timeLeft} 秒`;
        document.getElementById('result').textContent = "";
        document.getElementById('stars').textContent = "";
        document.getElementById('restart-btn').style.display = 'none';
        document.getElementById('game-mode').textContent = `遊戲模式：${selectedMode}`; // 顯示選擇的模式
        document.getElementById('mode-warning').style.display = 'none'; // 隱藏警告訊息
    }

    function getRandomKey() {
        const keys = "1234567890-QWERTYUIOPASDFGHJKL;ZXCVBNM,./-";
        let newKey;

        do {
            newKey = keys[Math.floor(Math.random() * keys.length)];
        } while (newKey === currentKey || previousKeys.includes(newKey));

        if (previousKeys.length >= 5) {
            previousKeys.shift();
        }
        previousKeys.push(newKey);

        return newKey;
    }

    function handleKeyPress(event) {
        if (!timerStarted) {
            timerStarted = true;
            startTimer();
        }
        
        if (gameEnded) return;
        
        const keyValue = event.key.toUpperCase();
        if (!"1234567890-QWERTYUIOPASDFGHJKL;ZXCVBNM,./-".includes(keyValue)) return;

        keyPressCount++;

        if (keyValue === currentKey) {
            score++;
            currentKey = getRandomKey();
            highlightKey(currentKey);
        } else {
            if (score > 0) score--;
            const keyElement = document.querySelector(`.key[data-key="${keyValue}"]`);
            if (keyElement) keyElement.classList.add("error");
        }

        document.getElementById("score").textContent = `得分：${score}`;
    }

function highlightKey(key) {
    document.querySelectorAll('.key').forEach(k => k.classList.remove('active', 'error'));
    const keyElement = document.querySelector(`.key[data-key="${key}"]`);
    if (keyElement) keyElement.classList.add('active');
    
    // 更新顯示的字符為英文
    document.getElementById('target-key').textContent = key;

    // 更新顯示的字符為注音符號
    updateTargetKeyDisplay(key);
}

function updateTargetKeyDisplay(key) {
    // 使用映射表來替換顯示字符
    const targetKeyElement = document.getElementById('target-key');
    if (targetKeyElement) {
        targetKeyElement.textContent = keyMap[key] || key; // 若沒有映射則顯示原字符
    }
}

    function startTimer() {
        timerInterval = setInterval(() => {
            timeLeft--;
            document.getElementById('timer').textContent = `剩餘時間：${timeLeft} 秒`;
            if (timeLeft <= 0) {
                clearInterval(timerInterval);
                endGame();
            }
        }, 1000);
    }

    function endGame() {
        gameEnded = true;  // 標記遊戲結束
        document.removeEventListener('keydown', handleKeyPress);  // 移除鍵盤事件
        document.getElementById('result').textContent = `輸入次數：${keyPressCount}`;
        document.getElementById('stars').innerHTML = getStarRating(score);
        document.getElementById('restart-btn').style.display = 'block';

        // 隱藏鍵盤
        document.querySelector('.keyboard').style.display = 'none';
    }

    function getStarRating(score) {
        let stars = Math.min(7, Math.floor(score / 10));
        let starText = "⭐".repeat(stars) || "😞";
        let feedback = ["不要灰心，往 1 星邁進，繼續加油！", "你是 1 星的新手戰士，開始努力吧！", "進入 2 星勇士了，再衝就對了！", "不錯喔！晉升為 3 星騎士了！", "讚啦！你是 4 星高手，超強的！", "太厲害了！你是 5 星英雄喔！", "強大的 6 星大師！", "天哪！ Power 7 星大神！"][stars];
        return `${starText} ${feedback}`;
    }

    function restartGame() {
        location.reload();  // 重新整理網頁
    }

    function handleKeyPress(event) {
        if (!timerStarted) {
            timerStarted = true;
            startTimer();

            // 顯示遊戲資訊
            document.getElementById('current-key').style.display = 'block';
            document.getElementById('score').style.display = 'block';
            document.getElementById('timer').style.display = 'block';
        }

        if (gameEnded) return;  // 遊戲結束後停止鍵盤事件

        const keyValue = event.key.toUpperCase();
        if (!/^[A-Z0-9,.\-\/;]$/.test(keyValue)) return; //處理接收字元

        keyPressCount++;

        if (keyValue === currentKey) {
            score++;
            currentKey = getRandomKey();
            highlightKey(currentKey);
        } else {
            if (score > 0) {
                score--;  // 打錯字，扣1分，但不低於0
            }
            const keyElement = document.querySelector(`.key[data-key="${keyValue}"]`);
            if (keyElement) keyElement.classList.add('error');
            setTimeout(() => keyElement.classList.remove('error'), 300); //錯誤案件恢復原色 
        }

        document.getElementById('score').textContent = `得分：${score}`;
    }

    // 按鈕事件處理
    document.getElementById('mode60').addEventListener('click', () => {
        gameMode = 60;
        selectedMode = "60 秒挑戰模式";  // 記錄選擇的模式
        resetGameVariables();
        currentKey = getRandomKey();
        highlightKey(currentKey);
        document.querySelector('.keyboard').style.display = 'block';  // 顯示鍵盤
        document.getElementById('mode-buttons').style.display = 'none';  // 隱藏模式選擇按鈕
        document.getElementById('current-key').style.display = 'block'; // 顯示“請按下”
        document.getElementById('score').style.display = 'block'; // 顯示得分
        document.getElementById('timer').style.display = 'block'; // 顯示剩餘時間
        document.getElementById('game-mode').style.display = 'block';  // 顯示選擇的模式
        document.addEventListener('keydown', handleKeyPress);
    });

    document.getElementById('mode10').addEventListener('click', () => {
        gameMode = 10;
        selectedMode = "10 秒暖身";
        resetGameVariables();
        currentKey = getRandomKey();
        highlightKey(currentKey);
        document.querySelector('.keyboard').style.display = 'block';
        document.getElementById('mode-buttons').style.display = 'none';
        document.getElementById('current-key').style.display = 'block';
        document.getElementById('score').style.display = 'block';
        document.getElementById('timer').style.display = 'block';
        document.getElementById('game-mode').style.display = 'block';
        document.addEventListener('keydown', handleKeyPress);
    });

    document.getElementById('mode90').addEventListener('click', () => {  // 新增 90 秒模式
        gameMode = 90;
        selectedMode = "90 秒練習模式";
        resetGameVariables();
        currentKey = getRandomKey();
        highlightKey(currentKey);
        document.querySelector('.keyboard').style.display = 'block';
        document.getElementById('mode-buttons').style.display = 'none';
        document.getElementById('current-key').style.display = 'block';
        document.getElementById('score').style.display = 'block';
        document.getElementById('timer').style.display = 'block';
        document.getElementById('game-mode').style.display = 'block';
        document.addEventListener('keydown', handleKeyPress);
    });
</script>
程式作者：阿邦老師 Ver.20250311
</body>
</html>
